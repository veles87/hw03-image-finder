{"version":3,"sources":["services/apiService.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["fetchImages","searchQuery","page","a","fetch","rawResult","ok","json","result","Searchbar","state","value","changeHandler","e","setState","target","submitHandler","preventDefault","props","onSubmit","trim","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","webformatURL","alt","onClick","showImageHandle","ImageGallery","images","map","image","index","showImageHandler","largeImageURL","id","Button","loadMoreHandler","Loader","color","height","width","modalRoot","document","querySelector","Modal","keyDownHandler","code","onClose","overlayClickHandler","event","currentTarget","window","addEventListener","removeEventListener","createPortal","fullImageURL","App","isLoading","openModal","error","maxPages","newElementHight","closeModal","imageUrl","scrollToHandler","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","searchImagesHandler","total","Math","ceil","totalHits","hits","console","toString","min","onSubmitHandler","searchString","prevProps","prevState","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f54ce9fb.chunk.js","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '11753469-fae5ae7c0c549b8c5c7373ba2';\n\nconst fetchImages = async (searchQuery, page) => {\n  const rawResult = await fetch(\n    `${BASE_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n  );\n\n  if (!rawResult.ok) {\n    throw rawResult;\n  }\n\n  const result = await rawResult.json();\n\n  return result;\n};\n\n// import axios from 'axios';\n\n// const fetchArticlesWithQuery = searchQuery => {\n//   return axios\n//     .get(`https://hn.algolia.com/api/v1/search?query=${searchQuery}`)\n//     .then(response => response.data.hits);\n// };\n\n// export default {\n//   fetchArticlesWithQuery,\n// };\n\nexport default fetchImages;\n","import { Component } from 'react';\n\nclass Searchbar extends Component {\n  state = {\n    value: '',\n  };\n\n  changeHandler = (e) => {\n    this.setState({ value: e.target.value });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.value.trim());\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.submitHandler}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.changeHandler}\n            value={this.state.value}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import { Component } from 'react';\n\nclass ImageGalleryItem extends Component {\n  // componentDidMount(prevProps, prevState) {\n  //   console.log(prevProps);\n  //   console.log(prevState);\n  //   console.log(this.props.index);\n  // }\n\n  render() {\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          src={this.props.webformatURL}\n          alt=\"\"\n          className=\"ImageGalleryItem-image\"\n          onClick={this.props.showImageHandle}\n        />\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import { Component } from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nclass ImageGallery extends Component {\n  // componentDidUpdate(prevProps, prevState) {\n  //   console.log('list Update');\n  //   window.scrollTo({\n  //     top: document.documentElement.scrollHeight,\n  //     behavior: 'smooth',\n  //   });\n  // }\n  render() {\n    return (\n      <ul className=\"ImageGallery\">\n        {this.props.images.map((image, index) => {\n          return (\n            <ImageGalleryItem\n              key={image.id}\n              webformatURL={image.webformatURL}\n              showImageHandle={this.props.showImageHandler(image.largeImageURL)}\n              index={index}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import { Component } from 'react';\n\nclass Button extends Component {\n  render() {\n    return (\n      <button type=\"button\" className=\"Button\" onClick={this.props.loadMoreHandler}>\n        Load more\n      </button>\n    );\n  }\n}\nexport default Button;\n","import Spinner from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Loader = () => {\n  return (\n    <div className=\"Loader\">\n      <Spinner type=\"Bars\" color=\"#3f51b5\" height={60} width={120} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.keyDownHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.keyDownHandler);\n  }\n\n  keyDownHandler = (e) => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  overlayClickHandler = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.overlayClickHandler}>\n        <div className=\"Modal\">\n          <img src={this.props.fullImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import { Component } from 'react';\nimport './styles.css';\n\nimport fetchImages from './services/apiService';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    page: 1,\n    isLoading: false,\n    openModal: false,\n    error: '',\n  };\n\n  maxPages = 0;\n  fullImageURL = '';\n  newElementHight = 0;\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.searchQuery !== this.state.searchQuery && this.state.searchQuery !== '') ||\n      prevState.page !== this.state.page\n    ) {\n      this.searchImagesHandler();\n      // this.scrollToHandler();\n    }\n    if (prevState.images.length !== this.state.images.length && prevState.images.length !== 0) {\n      // console.log('scrollToHandler App DidUpdate');\n      this.scrollToHandler();\n    }\n  }\n\n  closeModal = () => {\n    this.fullImageURL = '';\n    this.setState({ openModal: false });\n  };\n\n  showImageHandler = (imageUrl) => () => {\n    this.fullImageURL = imageUrl;\n    this.setState({ openModal: true });\n  };\n\n  scrollToHandler = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 750);\n  };\n\n  searchImagesHandler = async () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ isLoading: true, error: '' });\n    try {\n      const result = await fetchImages(searchQuery, page);\n\n      if (result.total !== 0) {\n        this.maxPages = Math.ceil(result.totalHits / 12);\n\n        this.setState(({ images }) => ({\n          images: [...images, ...result.hits],\n        }));\n      } else {\n        // console.log('Not found');\n        this.setState(() => ({\n          images: [],\n          error: 'No results were found for your search.',\n        }));\n      }\n    } catch (error) {\n      console.error(error);\n      this.setState(() => ({ error: error.toString() }));\n    } finally {\n      this.setState({ isLoading: false });\n\n      // this.scrollToHandler();\n    }\n  };\n\n  loadMoreHandler = () => {\n    this.setState(() => ({ page: Math.min(this.maxPages, this.state.page + 1) }));\n  };\n\n  onSubmitHandler = (searchString) => {\n    this.maxPages = 0;\n\n    this.setState(() => ({\n      images: [],\n      searchQuery: searchString,\n      page: 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onSubmitHandler} />\n        {this.state.error ? (\n          <p className=\"ErrorText\">{this.state.error}</p>\n        ) : (\n          <ImageGallery\n            images={this.state.images}\n            showImageHandler={this.showImageHandler}\n            scrollToHandler={this.scrollToHandler}\n          />\n        )}\n        {/* <ImageGallery\n          images={this.state.images}\n          showImageHandler={this.showImageHandler}\n          scrollToHandler={this.scrollToHandler}\n        /> */}\n        {this.state.isLoading && <Loader />}\n        {this.state.page < this.maxPages && <Button loadMoreHandler={this.loadMoreHandler} />}\n        {this.state.openModal && (\n          <Modal fullImageURL={this.fullImageURL} onClose={this.closeModal}></Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}